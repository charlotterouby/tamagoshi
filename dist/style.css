@import url(https://fonts.googleapis.com/css?family=Geo:400,400italic&subset=latin,latin-ext);
h1, h2, h3, h4, h5, h6 {
  font-family: 'Geo'; }

h1 {
  color: #FFC600; }
  h1 small {
    color: #B58D00; }

@media screen and (min-width: 768px) {
  h1 {
    font-size: 4em; }
  h2, .panel-heading > h2, h3 {
    height: auto;
    font-size: 2em; } }

.avatar {
  display: flex;
  justify-content: center;
  align-items: center; }
  @media screen and (max-width: 767px) {
    .avatar img {
      height: 25vh; } }

.btn-primary {
  background-color: #FFC600;
  border-color: #FFC600; }
  .btn-primary:hover, .btn-primary:active, .btn-primary:focus, .btn-primary:active:focus {
    background-color: #B58D00;
    border-color: #B58D00; }

.btn-info {
  background-color: #574CC4;
  border-color: #574CC4; }
  .btn-info:hover, .btn-info:active, .btn-info:focus, .btn-info:active:focus {
    background-color: #170D7E;
    border-color: #170D7E; }

.alert-info {
  background-color: #d8d5f3;
  border-color: #d8d5f3;
  color: #2516BC; }

.alert-success {
  background-color: #c8f0e4;
  border-color: #c8f0e4;
  color: #003E2B; }

.alert-warning {
  background-color: #FFEAA1;
  border-color: #FFEAA1;
  color: #5E4900; }

.alert-danger {
  background-color: #f3ceec;
  border-color: #f3ceec;
  color: #440037; }

.panel-primary {
  border-color: #FFC600; }
  .panel-primary .panel-heading {
    background-color: #FFC600;
    border-color: #FFC600; }

.page-header {
  display: flex;
  justify-content: space-around;
  align-items: center;
  text-align: center;
  margin-top: 20px; }
  @media screen and (max-width: 767px) {
    .page-header {
      flex-wrap: wrap; } }

body {
  background-color: #fff4cc; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlcyI6WyJzdHlsZS5zY3NzIiwicGFydGlhbHMvX3ZhcmlhYmxlcy5zY3NzIiwicGFydGlhbHMvX3R5cG8uc2NzcyIsInBhcnRpYWxzL191aS1lbGVtZW50cy5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3BhcnRpYWxzL3ZhcmlhYmxlcyc7XG5AaW1wb3J0ICdwYXJ0aWFscy90eXBvJztcbkBpbXBvcnQgJ3BhcnRpYWxzL3VpLWVsZW1lbnRzJztcblxuYm9keXtcblx0YmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbihwYWxldHRlKGphdW5lKSwgNDAlKTtcbn0iLCIvLyAgPT09PT09PT09IE1FRElBIFFVRVJJRVMgPT09PT09PT09PVxuJG1vYmlsZS1tYXg6IDc2N3B4O1xuJHRhYmxldC1taW46IDc2OHB4O1xuJHRhYmxldC1tYXg6IDEwMjRweDtcbiRkZXNrdG9wLW1pbjogMTAyNXB4O1xuJGNvbnRhaW5lci1tYXgtd2lkdGg6IDE5ODBweDtcblxuLy8gPT09PT09PT09PSBDT0xPUlMgPT09PT09PT09PVxuXG4vLyBQYWxldHRlIFVSTDogaHR0cDovL3BhbGV0dG9uLmNvbS8jdWlkPTQxZzBYMGstZC1kYlFQNm1MQ09DT21MUDZiUSAqL1xuLy8gRmVlbCBmcmVlIHRvIGNvcHkmcGFzdGUgY29sb3IgY29kZXMgdG8geW91ciBhcHBsaWNhdGlvbiAqL1xuXG4vLyBNYWluIFByaW1hcnkgY29sb3IgOiBKYXVuZVxuLy8gTWFpbiBTZWNvbmRhcnkgY29sb3IgKDEpIDogUm9zZVxuLy8gTWFpbiBTZWNvbmRhcnkgY29sb3IgKDIpIDogVmVydFxuLy8gTWFpbiBDb21wbGVtZW50IGNvbG9yIDogQmxldVxuXG4kcGFsZXR0ZXM6IChcblx0amF1bmU6IChcblx0XHRkYXJrOiAjNUU0OTAwLFxuXHRcdG1pZC1kYXJrOiAjQjU4RDAwLFxuXHRcdGJhc2U6ICNGRkM2MDAsXG5cdFx0bWlkLWxpZ3RoOiAjRkZENjRBLFxuXHRcdGxpZ2h0OiAjRkZFQUExXG5cdCksXG5cdHJvc2U6IChcblx0XHRkYXJrOiAjNDQwMDM3LFxuXHRcdG1pZC1kYXJrOiAjODIwMDY5LFxuXHRcdGJhc2U6ICNDMDAwOUMsIFxuXHRcdG1pZC1saWdodDogI0M4M0FBRCwgXG5cdFx0bGlnaHQ6IGxpZ2h0ZW4oI0U0OTBENCwgMTUlKVxuXHQpLFxuXHR2ZXJ0OiAoXG5cdFx0ZGFyazogIzAwM0UyQiwgXG5cdFx0bWlkLWRhcms6ICMwMDc4NTQsXG5cdFx0YmFzZTogIzAwQjQ3RCxcblx0XHRtaWQtbGlnaHQ6ICMzN0JFOTUsXG5cdFx0bGlnaHQ6IGxpZ2h0ZW4oIzhDREZDNiwgMTUlKVxuXHQpLCBcblx0YmxldTogKFxuXHRcdGRhcms6ICMwOTAzNDIsIFxuXHRcdG1pZC1kYXJrOiAjMTcwRDdFLFxuXHRcdGJhc2U6ICMyNTE2QkMsXG5cdFx0bWlkLWxpZ2h0OiAjNTc0Q0M0LFxuXHRcdGxpZ2h0OiBsaWdodGVuKCNBMDlBRTIsIDE1JSlcblx0KSwgXG5cdGdyaXM6IChcblx0XHRkYXJrOiAjMDAwMDAwLFxuXHRcdGJhc2U6IGxpZ2h0ZW4oIzAwMDAwMCwgNTAlKSxcblx0XHRsaWdodDogI0ZGRkZGRlxuXHQpXG4pO1xuXG5AZnVuY3Rpb24gcGFsZXR0ZSgkcGFsZXR0ZSwgJHRvbmU6ICdiYXNlJyl7XG5cdEByZXR1cm4gbWFwLWdldChtYXAtZ2V0KCRwYWxldHRlcywgJHBhbGV0dGUpLCAkdG9uZSk7XG59XG5cbi8vIHBvdXIgYXBwZWxlciB1bmUgY291bGV1ciBleC46IGgxe2NvbG9yOiBwYWxldHRlKGphdW5lLCBkYXJrKTt9XG4vLyBUb24gZGUgY291bGV1ciBwYXIgZMOpZmF1dCA9IGJhc2UgZXguOiBoMXtjb2xvcjogcGFsZXR0ZShqYXVuZSk7fSIsIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1HZW86NDAwLDQwMGl0YWxpYyZzdWJzZXQ9bGF0aW4sbGF0aW4tZXh0KTtcblxuaDEsaDIsIGgzLCBoNCwgaDUsIGg2IHtcblx0XHRmb250LWZhbWlseTogJ0dlbyc7XG59XG5cbmgxIHtcblx0Y29sb3I6IHBhbGV0dGUoamF1bmUpO1xuXHRzbWFsbHtcblx0XHRjb2xvcjogcGFsZXR0ZShqYXVuZSwgbWlkLWRhcmspO1xuXHR9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR0YWJsZXQtbWluKSB7XG5cdGgxIHtcblx0XHRmb250LXNpemU6IDRlbTtcblx0fVxuXG5cdGgyLCAucGFuZWwtaGVhZGluZyA+IGgyLCBoMyB7XG5cdFx0aGVpZ2h0OiBhdXRvO1xuXHRcdGZvbnQtc2l6ZTogMmVtO1xuXHR9XG59XG5cbiIsIi8vIEFWQVRBUlxuLmF2YXRhcntcblx0ZGlzcGxheTogZmxleDtcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJG1vYmlsZS1tYXgpIHtcblx0XHRpbWcge1xuXHRcdFx0aGVpZ2h0OiAyNXZoO1xuXHRcdH1cblx0fVxufVxuXG5cbi8vIEJVVFRPTlxuLmJ0bi1wcmltYXJ5IHtcblx0YmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShqYXVuZSk7XG5cdGJvcmRlci1jb2xvcjogcGFsZXR0ZShqYXVuZSk7XG5cblx0Jjpob3ZlciwgJjphY3RpdmUsICY6Zm9jdXMsICY6YWN0aXZlOmZvY3VzIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGphdW5lLCBtaWQtZGFyayk7XG5cdFx0Ym9yZGVyLWNvbG9yOiBwYWxldHRlKGphdW5lLCBtaWQtZGFyayk7XG5cdH1cbn1cbi5idG4taW5mbyB7XG5cdGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUoYmxldSwgbWlkLWxpZ2h0KTtcblx0Ym9yZGVyLWNvbG9yOiBwYWxldHRlKGJsZXUsIG1pZC1saWdodCk7XG5cblx0Jjpob3ZlciwgJjphY3RpdmUsICY6Zm9jdXMsICY6YWN0aXZlOmZvY3VzIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJsZXUsIG1pZC1kYXJrKTtcblx0XHRib3JkZXItY29sb3I6IHBhbGV0dGUoYmxldSwgbWlkLWRhcmspO1xuXHR9XG59XG5cbi8vIE1FU1NBR0VTXG4uYWxlcnQtaW5mbyB7XG5cdGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUoYmxldSwgbGlnaHQpO1xuXHRib3JkZXItY29sb3I6IHBhbGV0dGUoYmxldSwgbGlnaHQpO1xuXHRjb2xvcjogcGFsZXR0ZShibGV1KTtcbn1cbi5hbGVydC1zdWNjZXNzIHtcblx0YmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZSh2ZXJ0LCBsaWdodCk7XG5cdGJvcmRlci1jb2xvcjogcGFsZXR0ZSh2ZXJ0LCBsaWdodCk7XG5cdGNvbG9yOiBwYWxldHRlKHZlcnQsIGRhcmspO1xufVxuLmFsZXJ0LXdhcm5pbmcge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGphdW5lLCBsaWdodCk7XG5cdGJvcmRlci1jb2xvcjogcGFsZXR0ZShqYXVuZSwgbGlnaHQpO1xuXHRjb2xvcjogcGFsZXR0ZShqYXVuZSwgZGFyayk7XG59XG4uYWxlcnQtZGFuZ2VyIHtcblx0YmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShyb3NlLCBsaWdodCk7XG5cdGJvcmRlci1jb2xvcjogcGFsZXR0ZShyb3NlLCBsaWdodCk7XG5cdGNvbG9yOiBwYWxldHRlKHJvc2UsIGRhcmspO1xufVxuXG4vLyBQQU5FTFxuLnBhbmVsLXByaW1hcnkge1xuXHRib3JkZXItY29sb3I6IHBhbGV0dGUoamF1bmUpO1xuXG5cdC5wYW5lbC1oZWFkaW5nIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGphdW5lKTtcblx0XHRib3JkZXItY29sb3I6IHBhbGV0dGUoamF1bmUpO1xuXHR9XG59XG5cbi8vIFBBR0UgSEVBREVSXG4ucGFnZS1oZWFkZXIge1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRtYXJnaW4tdG9wOiAyMHB4O1xuXHRcblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJG1vYmlsZS1tYXgpIHtcblx0XHRmbGV4LXdyYXA6IHdyYXA7XG5cdH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFFQUEsT0FBTyxDQUFDLHFGQUFJO0FBRVosQUFBQSxFQUFFLEVBQUMsQUFBQSxFQUFFLEVBQUUsQUFBQSxFQUFFLEVBQUUsQUFBQSxFQUFFLEVBQUUsQUFBQSxFQUFFLEVBQUUsQUFBQSxFQUFFLENBQUM7RUFDcEIsV0FBVyxFQUFFLEtBQU0sR0FDcEI7O0FBRUQsQUFBQSxFQUFFLENBQUM7RUFDRixLQUFLLEVEY0UsT0FBTyxHQ1ZkO0VBTEQsQUFFQyxFQUZDLENBRUQsS0FBSyxDQUFBO0lBQ0osS0FBSyxFRFdLLE9BQU8sR0NWakI7O0FBR0YsTUFBTSxDQUFOLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQUMzQixBQUFBLEVBQUUsQ0FBQztJQUNGLFNBQVMsRUFBRSxHQUFJLEdBQ2Y7RUFFRCxBQUFBLEVBQUUsRUFBRSxBQUFpQixjQUFILEdBQUcsRUFBRSxFQUFFLEFBQUEsRUFBRSxDQUFDO0lBQzNCLE1BQU0sRUFBRSxJQUFLO0lBQ2IsU0FBUyxFQUFFLEdBQUksR0FDZjs7QUNwQkYsQUFBQSxPQUFPLENBQUE7RUFDTixPQUFPLEVBQUUsSUFBSztFQUNkLGVBQWUsRUFBRSxNQUFPO0VBQ3hCLFdBQVcsRUFBRSxNQUFPLEdBT3BCO0VBTEEsTUFBTSxDQUFOLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztJQUw3QixBQU1FLE9BTkssQ0FNTCxHQUFHLENBQUM7TUFDSCxNQUFNLEVBQUUsSUFBSyxHQUNiOztBQU1ILEFBQUEsWUFBWSxDQUFDO0VBQ1osZ0JBQWdCLEVGS1QsT0FBTztFRUpkLFlBQVksRUZJTCxPQUFPLEdFRWQ7RUFSRCxBQUFBLFlBQVksQUFJVixNQUFNLEVBSlIsQUFBQSxZQUFZLEFBSUQsT0FBTyxFQUpsQixBQUFBLFlBQVksQUFJUyxNQUFNLEVBSjNCLEFBQUEsWUFBWSxBQUlrQixPQUFPLEFBQUEsTUFBTSxDQUFDO0lBQzFDLGdCQUFnQixFRkFOLE9BQU87SUVDakIsWUFBWSxFRkRGLE9BQU8sR0VFakI7O0FBRUYsQUFBQSxTQUFTLENBQUM7RUFDVCxnQkFBZ0IsRUZrQkosT0FBTztFRWpCbkIsWUFBWSxFRmlCQSxPQUFPLEdFWG5CO0VBUkQsQUFBQSxTQUFTLEFBSVAsTUFBTSxFQUpSLEFBQUEsU0FBUyxBQUlFLE9BQU8sRUFKbEIsQUFBQSxTQUFTLEFBSVksTUFBTSxFQUozQixBQUFBLFNBQVMsQUFJcUIsT0FBTyxBQUFBLE1BQU0sQ0FBQztJQUMxQyxnQkFBZ0IsRUZZTixPQUFPO0lFWGpCLFlBQVksRUZXRixPQUFPLEdFVmpCOztBQUlGLEFBQUEsV0FBVyxDQUFDO0VBQ1gsZ0JBQWdCLEVGUVIsT0FBTztFRVBmLFlBQVksRUZPSixPQUFPO0VFTmYsS0FBSyxFRklFLE9BQU8sR0VIZDs7QUFDRCxBQUFBLGNBQWMsQ0FBQztFQUNkLGdCQUFnQixFRkpSLE9BQU87RUVLZixZQUFZLEVGTEosT0FBTztFRU1mLEtBQUssRUZWRSxPQUFPLEdFV2Q7O0FBQ0QsQUFBQSxjQUFjLENBQUM7RUFDZCxnQkFBZ0IsRUZ2QlIsT0FBTztFRXdCZixZQUFZLEVGeEJKLE9BQU87RUV5QmYsS0FBSyxFRjdCRSxPQUFPLEdFOEJkOztBQUNELEFBQUEsYUFBYSxDQUFDO0VBQ2IsZ0JBQWdCLEVGckJSLE9BQU87RUVzQmYsWUFBWSxFRnRCSixPQUFPO0VFdUJmLEtBQUssRUYzQkUsT0FBTyxHRTRCZDs7QUFHRCxBQUFBLGNBQWMsQ0FBQztFQUNkLFlBQVksRUZyQ0wsT0FBTyxHRTJDZDtFQVBELEFBR0MsY0FIYSxDQUdiLGNBQWMsQ0FBQztJQUNkLGdCQUFnQixFRnhDVixPQUFPO0lFeUNiLFlBQVksRUZ6Q04sT0FBTyxHRTBDYjs7QUFJRixBQUFBLFlBQVksQ0FBQztFQUNaLE9BQU8sRUFBRSxJQUFLO0VBQ2QsZUFBZSxFQUFFLFlBQWE7RUFDOUIsV0FBVyxFQUFFLE1BQU87RUFDcEIsVUFBVSxFQUFFLE1BQU87RUFDbkIsVUFBVSxFQUFFLElBQUssR0FLakI7RUFIQSxNQUFNLENBQU4sTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0lBUDdCLEFBQUEsWUFBWSxDQUFDO01BUVgsU0FBUyxFQUFFLElBQUssR0FFakI7O0FIekVELEFBQUEsSUFBSSxDQUFBO0VBQ0gsZ0JBQWdCLEVBQUUsT0FBTyxHQUN6QiIsIm5hbWVzIjpbXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
